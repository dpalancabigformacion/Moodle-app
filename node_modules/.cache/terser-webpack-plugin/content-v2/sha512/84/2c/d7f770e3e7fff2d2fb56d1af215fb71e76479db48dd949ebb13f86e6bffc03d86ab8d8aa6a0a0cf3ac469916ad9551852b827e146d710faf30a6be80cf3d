{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{NdFX:function(e,s,o){\"use strict\";o.r(s),o.d(s,\"AddonForumNewDiscussionPageModule\",(function(){return U}));var i=o(\"tyNb\"),n=o(\"AzLI\"),t=o(\"MLi9\"),c=o(\"ekpb\"),d=o(\"L3Fv\"),a=o(\"mrSG\"),r=o(\"3Pt+\"),u=o(\"fjkH\"),l=o(\"mWdr\"),m=o(\"pHTc\"),h=o(\"ZCW2\"),g=o(\"N5Lt\"),f=o(\"pET4\"),_=o(\"9+EE\"),p=o(\"3LXp\"),D=o(\"j3ag\"),w=o(\"uT8i\"),b=o(\"h709\"),I=o(\"bFG1\"),v=o(\"VF9H\"),M=o(\"hSQQ\"),A=o(\"vuGA\"),P=o(\"4reR\"),E=o(\"nFEd\"),F=o(\"LVzu\"),y=o(\"baaQ\"),N=o(\"fXoL\"),T=o(\"46ml\"),C=o(\"TEn/\"),O=o(\"nt/U\"),S=o(\"OZH1\"),x=o(\"PgjG\"),G=o(\"ofXK\"),V=o(\"3CSS\"),j=o(\"ACYt\"),k=o(\"M9y5\"),L=o(\"sYmb\");const R=[\"newDiscFormEl\"];function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"ion-item\"),N.Ec(1,\"ion-label\"),N.pd(2),N.Pc(3,\"translate\"),N.Dc(),N.Ec(4,\"ion-toggle\",20),N.Mc(\"ngModelChange\",(function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template_ion_toggle_ngModelChange_4_listener(s){N.fd(e);return N.Oc(3).newDiscussion.postToAllGroups=s})),N.Dc(),N.Dc()}if(2&e){const e=N.Oc(3);N.lc(2),N.qd(N.Qc(3,2,\"addon.mod_forum.posttomygroups\")),N.lc(2),N.Vc(\"ngModel\",e.newDiscussion.postToAllGroups)}}function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_6_Template(e,s){if(1&e&&(N.Ec(0,\"ion-select-option\",25),N.pd(1),N.Dc()),2&e){const e=s.$implicit;N.Vc(\"value\",e.id),N.lc(1),N.qd(e.name)}}const _c1=function(e){return{header:e}};function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"ion-item\",21),N.Ec(1,\"ion-label\",22),N.pd(2),N.Pc(3,\"translate\"),N.Dc(),N.Ec(4,\"ion-select\",23),N.Mc(\"ngModelChange\",(function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ngModelChange_4_listener(s){N.fd(e);return N.Oc(3).newDiscussion.groupId=s})),N.Pc(5,\"translate\"),N.nd(6,AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_6_Template,2,2,\"ion-select-option\",24),N.Dc(),N.Dc()}if(2&e){const e=N.Oc(3);N.lc(2),N.qd(N.Qc(3,5,\"addon.mod_forum.group\")),N.lc(2),N.Vc(\"ngModel\",e.newDiscussion.groupId)(\"disabled\",e.newDiscussion.postToAllGroups)(\"interfaceOptions\",N.ad(9,_c1,N.Qc(5,7,\"addon.mod_forum.group\"))),N.lc(2),N.Vc(\"ngForOf\",e.groups)}}function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"ion-item\"),N.Ec(1,\"ion-label\"),N.pd(2),N.Pc(3,\"translate\"),N.Dc(),N.Ec(4,\"ion-toggle\",26),N.Mc(\"ngModelChange\",(function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template_ion_toggle_ngModelChange_4_listener(s){N.fd(e);return N.Oc(3).newDiscussion.pin=s})),N.Dc(),N.Dc()}if(2&e){const e=N.Oc(3);N.lc(2),N.qd(N.Qc(3,2,\"addon.mod_forum.discussionpinned\")),N.lc(2),N.Vc(\"ngModel\",e.newDiscussion.pin)}}function AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template(e,s){if(1&e&&N.zc(0,\"core-attachments\",27),2&e){const e=N.Oc(3);N.Vc(\"files\",e.newDiscussion.files)(\"maxSize\",e.forum.maxbytes)(\"maxSubmissions\",e.forum.maxattachments)(\"component\",e.component)(\"componentId\",e.forum.cmid)(\"allowOffline\",!0)(\"courseId\",e.courseId)}}function AddonModForumNewDiscussionPage_form_15_div_21_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"div\",16),N.nd(1,AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template,5,4,\"ion-item\",7),N.nd(2,AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template,7,11,\"ion-item\",17),N.Ec(3,\"ion-item\"),N.Ec(4,\"ion-label\"),N.pd(5),N.Pc(6,\"translate\"),N.Dc(),N.Ec(7,\"ion-toggle\",18),N.Mc(\"ngModelChange\",(function AddonModForumNewDiscussionPage_form_15_div_21_Template_ion_toggle_ngModelChange_7_listener(s){N.fd(e);return N.Oc(2).newDiscussion.subscribe=s})),N.Dc(),N.Dc(),N.nd(8,AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template,5,4,\"ion-item\",7),N.nd(9,AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template,1,7,\"core-attachments\",19),N.Dc()}if(2&e){const e=N.Oc(2);N.lc(1),N.Vc(\"ngIf\",e.showGroups&&e.groupIds.length>1&&e.accessInfo.cancanposttomygroups),N.lc(1),N.Vc(\"ngIf\",e.showGroups),N.lc(3),N.qd(N.Qc(6,6,\"addon.mod_forum.discussionsubscription\")),N.lc(2),N.Vc(\"ngModel\",e.newDiscussion.subscribe),N.lc(1),N.Vc(\"ngIf\",e.canPin),N.lc(1),N.Vc(\"ngIf\",e.canCreateAttachments&&e.forum&&e.forum.maxattachments>0)}}function AddonModForumNewDiscussionPage_form_15_ion_col_25_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"ion-col\"),N.Ec(1,\"ion-button\",28),N.Mc(\"click\",(function AddonModForumNewDiscussionPage_form_15_ion_col_25_Template_ion_button_click_1_listener(){N.fd(e);return N.Oc(2).discard()})),N.pd(2),N.Pc(3,\"translate\"),N.Dc(),N.Dc()}2&e&&(N.lc(2),N.qd(N.Qc(3,1,\"core.discard\")))}function AddonModForumNewDiscussionPage_form_15_Template(e,s){if(1&e){const e=N.Fc();N.Ec(0,\"form\",null,8),N.Ec(2,\"ion-item\"),N.Ec(3,\"ion-label\",9),N.pd(4),N.Pc(5,\"translate\"),N.Dc(),N.Ec(6,\"ion-input\",10),N.Mc(\"ngModelChange\",(function AddonModForumNewDiscussionPage_form_15_Template_ion_input_ngModelChange_6_listener(s){N.fd(e);return N.Oc().newDiscussion.subject=s})),N.Pc(7,\"translate\"),N.Dc(),N.Dc(),N.Ec(8,\"ion-item\"),N.Ec(9,\"ion-label\",9),N.pd(10),N.Pc(11,\"translate\"),N.Dc(),N.Ec(12,\"core-rich-text-editor\",11),N.Mc(\"contentChanged\",(function AddonModForumNewDiscussionPage_form_15_Template_core_rich_text_editor_contentChanged_12_listener(s){N.fd(e);return N.Oc().onMessageChange(s)})),N.Pc(13,\"translate\"),N.Dc(),N.Dc(),N.Ec(14,\"ion-item\",12),N.Mc(\"click\",(function AddonModForumNewDiscussionPage_form_15_Template_ion_item_click_14_listener(){N.fd(e);return N.Oc().toggleAdvanced()})),N.Pc(15,\"translate\"),N.zc(16,\"ion-icon\",13),N.Ec(17,\"ion-label\"),N.Ec(18,\"h2\"),N.pd(19),N.Pc(20,\"translate\"),N.Dc(),N.Dc(),N.Dc(),N.nd(21,AddonModForumNewDiscussionPage_form_15_div_21_Template,10,8,\"div\",14),N.Ec(22,\"ion-item\"),N.Ec(23,\"ion-label\"),N.Ec(24,\"ion-row\"),N.nd(25,AddonModForumNewDiscussionPage_form_15_ion_col_25_Template,4,3,\"ion-col\",7),N.Ec(26,\"ion-col\"),N.Ec(27,\"ion-button\",15),N.Mc(\"click\",(function AddonModForumNewDiscussionPage_form_15_Template_ion_button_click_27_listener(){N.fd(e);return N.Oc().add()})),N.pd(28),N.Pc(29,\"translate\"),N.Dc(),N.Dc(),N.Dc(),N.Dc(),N.Dc(),N.Dc()}if(2&e){const e=N.Oc();N.lc(4),N.qd(N.Qc(5,19,\"addon.mod_forum.subject\")),N.lc(2),N.Vc(\"ngModel\",e.newDiscussion.subject)(\"placeholder\",N.Qc(7,21,\"addon.mod_forum.subject\")),N.lc(4),N.qd(N.Qc(11,23,\"addon.mod_forum.message\")),N.lc(2),N.Vc(\"control\",e.messageControl)(\"placeholder\",N.Qc(13,25,\"addon.mod_forum.message\"))(\"component\",e.component)(\"componentId\",e.forum.cmid)(\"autoSave\",!0)(\"contextInstanceId\",e.forum.cmid),N.lc(2),N.mc(\"aria-expanded\",e.advanced)(\"aria-label\",N.Qc(15,27,e.advanced?\"core.hideadvanced\":\"core.showadvanced\")),N.lc(2),N.qc(\"expandable-status-icon-expanded\",e.advanced),N.lc(3),N.qd(N.Qc(20,29,\"addon.mod_forum.advanced\")),N.lc(2),N.Vc(\"ngIf\",e.advanced),N.lc(4),N.Vc(\"ngIf\",e.hasOffline),N.lc(2),N.Vc(\"disabled\",\"\"==e.newDiscussion.subject||null==e.newDiscussion.message),N.lc(1),N.rd(\" \",N.Qc(29,31,\"addon.mod_forum.posttoforum\"),\" \")}}let Q=(()=>{class AddonModForumNewDiscussionPage{constructor(e,s){this.route=e,this.splitView=s,this.component=h.b.COMPONENT,this.messageControl=new r.g,this.groupsLoaded=!1,this.showGroups=!1,this.hasOffline=!1,this.canCreateAttachments=!0,this.canPin=!1,this.showForm=!1,this.groups=[],this.groupIds=[],this.newDiscussion={subject:\"\",message:null,postToAllGroups:!1,groupId:0,subscribe:!0,pin:!1,files:[]},this.advanced=!1,this.accessInfo={},this.isDestroyed=!1,this.forceLeave=!1}ngOnInit(){var e,s;return Object(a.a)(this,void 0,void 0,(function*(){try{const o=this.route.snapshot.data;if(this.courseId=m.a.getRequiredRouteNumberParam(\"courseId\"),this.cmId=m.a.getRequiredRouteNumberParam(\"cmId\"),this.forumId=m.a.getRequiredRouteNumberParam(\"forumId\"),this.timeCreated=m.a.getRequiredRouteNumberParam(\"timeCreated\"),0!==this.timeCreated&&(null===(e=o.swipeEnabled)||void 0===e||e)){const e=y.a.getOrCreateSource(F.a,[this.courseId,this.cmId,null!==(s=o.discussionsPathPrefix)&&void 0!==s?s:\"\"]);this.discussions=new new_discussion_page_AddonModForumNewDiscussionDiscussionsSwipeManager(e),yield this.discussions.start()}}catch(e){return p.a.showErrorModal(e),this.goBack(),void 0}this.fetchDiscussionData().finally((()=>{this.groupsLoaded=!0}))}))}ionViewDidEnter(){this.syncObserver||(this.syncObserver=u.b.on(f.b.AUTO_SYNCED,(e=>{e.forumId==this.forumId&&e.userId==_.b.getCurrentSiteUserId()&&(p.a.showAlertTranslated(\"core.notice\",\"core.contenteditingsynced\"),this.returnToDiscussions())}),_.b.getCurrentSiteId()))}fetchDiscussionData(e){return Object(a.a)(this,void 0,void 0,(function*(){try{const s=yield l.a.getActivityGroupMode(this.cmId),o=[];s===l.b.SEPARATEGROUPS||s===l.b.VISIBLEGROUPS?o.push(l.a.instance.getActivityAllowedGroups(this.cmId).then((e=>{let o;return o=s===l.b.VISIBLEGROUPS?this.validateVisibleGroups(e.groups):this.addAllParticipantsOption(e.groups,!0),o.then((e=>{if(e.length>0)return this.groups=e,this.groupIds=e.map((e=>e.id)).filter((e=>e>0)),this.newDiscussion.groupId=this.newDiscussion.groupId||e[0].id,this.showGroups=!0,this.groupIds.length<=1&&(this.newDiscussion.postToAllGroups=!1),void 0;throw new Error(D.M.instant(s===l.b.SEPARATEGROUPS?\"addon.mod_forum.cannotadddiscussionall\":\"addon.mod_forum.cannotadddiscussion\"))}))}))):(this.showGroups=!1,this.newDiscussion.postToAllGroups=!1,o.push(I.a.ignoreErrors(h.a.instance.canAddDiscussionToAll(this.forumId,{cmId:this.cmId}).then((e=>{this.canPin=!!e.canpindiscussions,this.canCreateAttachments=!!e.cancreateattachment}))))),o.push(h.a.getForum(this.courseId,this.cmId).then((e=>this.forum=e))),o.push(h.a.instance.getAccessInformation(this.forumId,{cmId:this.cmId}).then((e=>this.accessInfo=e))),yield Promise.all(o),this.timeCreated&&!e&&(this.syncId=f.a.getForumSyncId(this.forumId),yield f.a.waitForSync(this.syncId).then((()=>(this.isDestroyed||w.a.blockOperation(h.b.COMPONENT,this.syncId),b.a.instance.getNewDiscussion(this.forumId,this.timeCreated).then((e=>Object(a.a)(this,void 0,void 0,(function*(){if(this.hasOffline=!0,e.options=e.options||{},e.groupid==h.b.ALL_GROUPS?(this.newDiscussion.groupId=this.groups[0].id,this.newDiscussion.postToAllGroups=!0):(this.newDiscussion.groupId=e.groupid,this.newDiscussion.postToAllGroups=!1),this.newDiscussion.subject=e.subject,this.newDiscussion.message=e.message,this.newDiscussion.subscribe=!!e.options.discussionsubscribe,this.newDiscussion.pin=!!e.options.discussionpinned,this.messageControl.setValue(e.message),\"object\"==typeof e.options.attachmentsid&&e.options.attachmentsid.offline){const e=yield v.a.getNewDiscussionStoredFiles(this.forumId,this.timeCreated);this.newDiscussion.files=e}(!this.newDiscussion.subscribe||this.newDiscussion.pin||this.newDiscussion.files.length||this.groups.length>0&&this.newDiscussion.groupId!=this.groups[0].id||this.newDiscussion.postToAllGroups)&&(this.advanced=!0)})))))))),this.originalData||(this.originalData={subject:this.newDiscussion.subject,message:this.newDiscussion.message,files:this.newDiscussion.files.slice()}),this.showForm=!0}catch(e){p.a.showErrorModalDefault(e,\"addon.mod_forum.errorgetgroups\",!0),this.showForm=!1}}))}validateVisibleGroups(e){return Object(a.a)(this,void 0,void 0,(function*(){let s;try{s=yield h.a.canAddDiscussionToAll(this.forumId,{cmId:this.cmId})}catch(e){s={status:!1,canpindiscussions:!1,cancreateattachment:!0}}if(this.canPin=!!s.canpindiscussions,this.canCreateAttachments=!!s.cancreateattachment,s.status)return this.addAllParticipantsOption(e,!1);const o=[],i=[];return e.forEach((e=>{o.push(h.a.instance.canAddDiscussion(this.forumId,e.id,{cmId:this.cmId}).catch((()=>({status:!0}))).then((s=>{s.status&&i.push(e)})))})),yield Promise.all(o),i}))}filterGroups(e,s){const o=s.map((e=>e.id));return e.filter((e=>o.indexOf(e.id)>-1))}addAllParticipantsOption(e,s){let o;return o=s?h.a.canAddDiscussionToAll(this.forumId,{cmId:this.cmId}).then((e=>(this.canPin=!!e.canpindiscussions,this.canCreateAttachments=!!e.cancreateattachment,e.status))).catch((()=>!1)):Promise.resolve(!0),o.then((s=>(s&&e.unshift({courseid:this.courseId,id:h.b.ALL_PARTICIPANTS,name:D.M.instant(\"core.allparticipants\")}),e)))}refreshGroups(e){const s=[l.a.invalidateActivityGroupMode(this.cmId),l.a.invalidateActivityAllowedGroups(this.cmId),h.a.invalidateCanAddDiscussion(this.forumId)];Promise.all(s).finally((()=>{this.fetchDiscussionData(!0).finally((()=>{null==e?void 0:e.complete()}))}))}returnToDiscussions(e,s){var o;this.forceLeave=!0,M.a.clearTmpFiles(this.newDiscussion.files),u.b.trigger(h.b.NEW_DISCUSSION_EVENT,{forumId:this.forumId,cmId:this.cmId,discussionIds:e,discTimecreated:s},_.b.getCurrentSiteId()),(null===(o=this.splitView)||void 0===o?void 0:o.outletActivated)?(this.hasOffline=!1,this.newDiscussion.subject=\"\",this.newDiscussion.message=null,this.newDiscussion.files=[],this.newDiscussion.postToAllGroups=!1,this.messageEditor.clearText(),this.originalData=I.a.clone(this.newDiscussion)):m.a.back()}onMessageChange(e){this.newDiscussion.message=e}add(){return Object(a.a)(this,void 0,void 0,(function*(){const e=this.forum.name,s=this.newDiscussion.subject;let o=this.newDiscussion.message||\"\";const i=this.newDiscussion.pin,n=this.newDiscussion.files,t=this.timeCreated||Date.now(),c={discussionsubscribe:!!this.newDiscussion.subscribe};if(!s)return p.a.showErrorModal(\"addon.mod_forum.erroremptysubject\",!0),void 0;if(!o)return p.a.showErrorModal(\"addon.mod_forum.erroremptymessage\",!0),void 0;const d=yield p.a.showModalLoading(\"core.sending\",!0);o=A.a.formatHtmlLines(o),i&&(c.discussionpinned=!0);const a=this.newDiscussion.postToAllGroups?this.groupIds:[this.newDiscussion.groupId];try{const i=yield v.a.addNewDiscussion(this.forumId,e,this.courseId,s,o,n,c,a,t);i&&(v.a.deleteNewDiscussionStoredFiles(this.forumId,t),u.b.trigger(u.b.ACTIVITY_DATA_SENT,{module:\"forum\"})),i&&i.length<a.length&&p.a.showErrorModalDefault(null,\"addon.mod_forum.errorposttoallgroups\",!0),P.a.triggerFormSubmittedEvent(this.formElement,!!i,_.b.getCurrentSiteId()),this.returnToDiscussions(i,t)}catch(e){p.a.showErrorModalDefault(e,\"addon.mod_forum.cannotcreatediscussion\",!0)}finally{d.dismiss()}}))}discard(){return Object(a.a)(this,void 0,void 0,(function*(){try{yield p.a.showConfirm(D.M.instant(\"core.areyousure\"));const e=[];e.push(b.a.deleteNewDiscussion(this.forumId,this.timeCreated)),e.push(I.a.ignoreErrors(v.a.deleteNewDiscussionStoredFiles(this.forumId,this.timeCreated))),yield Promise.all(e),P.a.triggerFormCancelledEvent(this.formElement,_.b.getCurrentSiteId()),this.returnToDiscussions()}catch(e){}}))}toggleAdvanced(){this.advanced=!this.advanced}canLeave(){return Object(a.a)(this,void 0,void 0,(function*(){return this.forceLeave||(v.a.hasPostDataChanged(this.newDiscussion,this.originalData)&&(yield p.a.showConfirm(D.M.instant(\"core.confirmcanceledit\"))),M.a.clearTmpFiles(this.newDiscussion.files),this.formElement&&P.a.triggerFormCancelledEvent(this.formElement,_.b.getCurrentSiteId())),!0}))}ionViewWillLeave(){this.syncObserver&&this.syncObserver.off(),delete this.syncObserver}goBack(){var e;(null===(e=this.splitView)||void 0===e?void 0:e.outletActivated)?m.a.navigate(\"../../\"):m.a.back()}ngOnDestroy(){var e;this.syncId&&w.a.unblockOperation(h.b.COMPONENT,this.syncId),this.isDestroyed=!0,null===(e=this.discussions)||void 0===e||e.destroy()}}return AddonModForumNewDiscussionPage.ɵfac=function AddonModForumNewDiscussionPage_Factory(e){return new(e||AddonModForumNewDiscussionPage)(N.yc(i.a),N.yc(T.a,8))},AddonModForumNewDiscussionPage.ɵcmp=N.sc({type:AddonModForumNewDiscussionPage,selectors:[[\"page-addon-mod-forum-new-discussion\"]],viewQuery:function AddonModForumNewDiscussionPage_Query(e,s){var o;(1&e&&(N.ud(R,!0),N.ud(g.a,!0)),2&e)&&(N.dd(o=N.Nc())&&(s.formElement=o.first),N.dd(o=N.Nc())&&(s.messageEditor=o.first))},decls:16,vars:13,consts:[[\"slot\",\"start\"],[3,\"text\"],[\"slot\",\"end\"],[3,\"core-swipe-navigation\"],[\"slot\",\"fixed\",3,\"disabled\",\"ionRefresh\"],[3,\"pullingText\"],[3,\"hideUntil\"],[4,\"ngIf\"],[\"newDiscFormEl\",\"\"],[\"position\",\"stacked\"],[\"type\",\"text\",\"name\",\"subject\",3,\"ngModel\",\"placeholder\",\"ngModelChange\"],[\"name\",\"addon_mod_forum_new_discussion\",\"contextLevel\",\"module\",\"elementId\",\"message\",3,\"control\",\"placeholder\",\"component\",\"componentId\",\"autoSave\",\"contextInstanceId\",\"contentChanged\"],[\"button\",\"\",\"detail\",\"false\",\"role\",\"heading\",\"aria-controls\",\"addon-mod-forum-new-discussion-advanced\",1,\"divider\",\"ion-text-wrap\",3,\"click\"],[\"name\",\"fas-chevron-right\",\"flip-rtl\",\"\",\"slot\",\"start\",\"aria-hidden\",\"true\",1,\"expandable-status-icon\"],[\"id\",\"addon-mod-forum-new-discussion-advanced\",4,\"ngIf\"],[\"expand\",\"block\",3,\"disabled\",\"click\"],[\"id\",\"addon-mod-forum-new-discussion-advanced\"],[\"class\",\"core-edit-set-group\",4,\"ngIf\"],[\"name\",\"subscribe\",3,\"ngModel\",\"ngModelChange\"],[3,\"files\",\"maxSize\",\"maxSubmissions\",\"component\",\"componentId\",\"allowOffline\",\"courseId\",4,\"ngIf\"],[\"name\",\"postallgroups\",3,\"ngModel\",\"ngModelChange\"],[1,\"core-edit-set-group\"],[\"id\",\"addon-mod-forum-groupslabel\"],[\"aria-labelledby\",\"addon-mod-forum-groupslabel\",\"interface\",\"action-sheet\",\"name\",\"groupid\",3,\"ngModel\",\"disabled\",\"interfaceOptions\",\"ngModelChange\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[3,\"value\"],[\"name\",\"pin\",3,\"ngModel\",\"ngModelChange\"],[3,\"files\",\"maxSize\",\"maxSubmissions\",\"component\",\"componentId\",\"allowOffline\",\"courseId\"],[\"expand\",\"block\",\"fill\",\"outline\",3,\"click\"]],template:function AddonModForumNewDiscussionPage_Template(e,s){1&e&&(N.Ec(0,\"ion-header\"),N.Ec(1,\"ion-toolbar\"),N.Ec(2,\"ion-buttons\",0),N.zc(3,\"ion-back-button\",1),N.Pc(4,\"translate\"),N.Dc(),N.Ec(5,\"ion-title\"),N.Ec(6,\"h1\"),N.pd(7),N.Pc(8,\"translate\"),N.Dc(),N.Dc(),N.zc(9,\"ion-buttons\",2),N.Dc(),N.Dc(),N.Ec(10,\"ion-content\",3),N.Ec(11,\"ion-refresher\",4),N.Mc(\"ionRefresh\",(function AddonModForumNewDiscussionPage_Template_ion_refresher_ionRefresh_11_listener(e){return s.refreshGroups(e.target)})),N.zc(12,\"ion-refresher-content\",5),N.Pc(13,\"translate\"),N.Dc(),N.Ec(14,\"core-loading\",6),N.nd(15,AddonModForumNewDiscussionPage_form_15_Template,30,33,\"form\",7),N.Dc(),N.Dc()),2&e&&(N.lc(3),N.Vc(\"text\",N.Qc(4,7,\"core.back\")),N.lc(4),N.qd(N.Qc(8,9,\"addon.mod_forum.addanewdiscussion\")),N.lc(3),N.Vc(\"core-swipe-navigation\",s.discussions),N.lc(1),N.Vc(\"disabled\",!s.groupsLoaded),N.lc(1),N.Wc(\"pullingText\",N.Qc(13,11,\"core.pulltorefresh\")),N.lc(2),N.Vc(\"hideUntil\",s.groupsLoaded),N.lc(1),N.Vc(\"ngIf\",s.showForm))},directives:[C.C,C.Ab,C.m,C.h,C.i,C.yb,O.a,C.v,S.a,C.bb,C.cb,x.a,G.t,r.H,r.s,r.t,C.I,C.O,C.H,C.Pb,r.r,r.u,g.a,C.D,V.a,C.hb,C.u,j.a,C.l,C.zb,C.d,C.lb,C.Ob,G.s,C.mb,k.a],pipes:[L.d],encapsulation:2}),AddonModForumNewDiscussionPage})();class new_discussion_page_AddonModForumNewDiscussionDiscussionsSwipeManager extends E.a{getSelectedItemPathFromRoute(e){return`${this.getSource().DISCUSSIONS_PATH_PREFIX}new/${e.params.timeCreated}`}}const q=[{path:\"\",component:Q,canDeactivate:[t.a]}];let U=(()=>{class AddonForumNewDiscussionPageModule{}return AddonForumNewDiscussionPageModule.ɵmod=N.wc({type:AddonForumNewDiscussionPageModule}),AddonForumNewDiscussionPageModule.ɵinj=N.vc({factory:function AddonForumNewDiscussionPageModule_Factory(e){return new(e||AddonForumNewDiscussionPageModule)},imports:[[i.m.forChild(q),d.a,n.a,c.a]]}),AddonForumNewDiscussionPageModule})();void((\"undefined\"==typeof ngJitMode||ngJitMode)&&N.kd(U,{declarations:[Q],imports:[i.m,d.a,n.a,c.a]}))},eoiU:function(e,s,o){\"use strict\";o.d(s,\"a\",(function(){return CoreSwipeNavigationItemsManager}));var i=o(\"mrSG\"),n=o(\"pHTc\"),t=o(\"CtbY\");class CoreSwipeNavigationItemsManager extends t.a{start(){return Object(i.a)(this,void 0,void 0,(function*(){this.updateSelectedItem()}))}navigateToNextItem(){return Object(i.a)(this,void 0,void 0,(function*(){yield this.navigateToItemBy(1,\"forward\")}))}navigateToPreviousItem(){return Object(i.a)(this,void 0,void 0,(function*(){yield this.navigateToItemBy(-1,\"back\")}))}hasNextItem(){return Object(i.a)(this,void 0,void 0,(function*(){return!!(yield this.getItemBy(1))}))}hasPreviousItem(){return Object(i.a)(this,void 0,void 0,(function*(){return!!(yield this.getItemBy(-1))}))}getCurrentPageRoute(){return n.a.getCurrentRoute()}getSelectedItemPathFromRoute(e){const s=[];for(;e&&(s.push(...e.url),e.firstChild);)e=e.firstChild;return s.map((e=>e.path)).join(\"/\").replace(/\\/+/,\"/\").trim()||null}navigateToItemBy(e,s){return Object(i.a)(this,void 0,void 0,(function*(){const o=yield this.getItemBy(e);o&&(yield this.navigateToItem(o,{animationDirection:s,replace:!0}))}))}getItemBy(e){var s;return Object(i.a)(this,void 0,void 0,(function*(){const o=this.getSource().getItems(),i=null!==(s=this.selectedItem&&(null==o?void 0:o.indexOf(this.selectedItem)))&&void 0!==s?s:-1;if(-1===i||null===o)return null;const n=e>0?1:-1;let t=i,c=0;for(;c!==e&&(t+=n,!(t<0||t>=o.length));)this.skipItemInSwipe(o[t])||(c+=n);return c===e?o[t]:this.getSource().isCompleted()?null:(yield this.getSource().load(),this.getItemBy(e))}))}skipItemInSwipe(e){return!1}}}}]);","name":"6.affbf5d3d5265065e8d2.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[6],{\n\n/***/ \"NdFX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"AddonForumNewDiscussionPageModule\", function() { return /* binding */ new_discussion_module_AddonForumNewDiscussionPageModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 14 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/components/components.module.ts\nvar components_module = __webpack_require__(\"AzLI\");\n\n// EXTERNAL MODULE: ./src/core/guards/can-leave.ts\nvar can_leave = __webpack_require__(\"MLi9\");\n\n// EXTERNAL MODULE: ./src/core/features/editor/components/components.module.ts\nvar components_components_module = __webpack_require__(\"ekpb\");\n\n// EXTERNAL MODULE: ./src/core/shared.module.ts + 3 modules\nvar shared_module = __webpack_require__(\"L3Fv\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./src/core/singletons/events.ts\nvar events = __webpack_require__(\"fjkH\");\n\n// EXTERNAL MODULE: ./src/core/services/groups.ts\nvar services_groups = __webpack_require__(\"mWdr\");\n\n// EXTERNAL MODULE: ./src/core/services/navigator.ts\nvar services_navigator = __webpack_require__(\"pHTc\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/services/forum.ts\nvar forum = __webpack_require__(\"ZCW2\");\n\n// EXTERNAL MODULE: ./src/core/features/editor/components/rich-text-editor/rich-text-editor.ts\nvar rich_text_editor = __webpack_require__(\"N5Lt\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/services/forum-sync.ts\nvar forum_sync = __webpack_require__(\"pET4\");\n\n// EXTERNAL MODULE: ./src/core/services/sites.ts\nvar sites = __webpack_require__(\"9+EE\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/dom.ts + 2 modules\nvar dom = __webpack_require__(\"3LXp\");\n\n// EXTERNAL MODULE: ./src/core/singletons/index.ts\nvar singletons = __webpack_require__(\"j3ag\");\n\n// EXTERNAL MODULE: ./src/core/services/sync.ts\nvar sync = __webpack_require__(\"uT8i\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/services/forum-offline.ts\nvar forum_offline = __webpack_require__(\"h709\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/utils.ts\nvar utils = __webpack_require__(\"bFG1\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/services/forum-helper.ts\nvar forum_helper = __webpack_require__(\"VF9H\");\n\n// EXTERNAL MODULE: ./src/core/features/fileuploader/services/fileuploader.ts\nvar fileuploader = __webpack_require__(\"hSQQ\");\n\n// EXTERNAL MODULE: ./src/core/services/utils/text.ts + 1 modules\nvar utils_text = __webpack_require__(\"vuGA\");\n\n// EXTERNAL MODULE: ./src/core/singletons/form.ts\nvar singletons_form = __webpack_require__(\"4reR\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/classes/forum-discussions-swipe-manager.ts\nvar forum_discussions_swipe_manager = __webpack_require__(\"nFEd\");\n\n// EXTERNAL MODULE: ./src/addons/mod/forum/classes/forum-discussions-source.ts\nvar forum_discussions_source = __webpack_require__(\"LVzu\");\n\n// EXTERNAL MODULE: ./src/core/classes/items-management/routed-items-manager-sources-tracker.ts\nvar routed_items_manager_sources_tracker = __webpack_require__(\"baaQ\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js + 4 modules\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./src/core/components/split-view/split-view.ts\nvar split_view = __webpack_require__(\"46ml\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./src/core/directives/content.ts\nvar content = __webpack_require__(\"nt/U\");\n\n// EXTERNAL MODULE: ./src/core/directives/swipe-navigation.ts\nvar swipe_navigation = __webpack_require__(\"OZH1\");\n\n// EXTERNAL MODULE: ./src/core/components/loading/loading.ts\nvar loading = __webpack_require__(\"PgjG\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./src/core/directives/fa-icon.ts\nvar fa_icon = __webpack_require__(\"3CSS\");\n\n// EXTERNAL MODULE: ./src/core/directives/update-non-reactive-attributes.ts\nvar update_non_reactive_attributes = __webpack_require__(\"ACYt\");\n\n// EXTERNAL MODULE: ./src/core/components/attachments/attachments.ts\nvar attachments_attachments = __webpack_require__(\"M9y5\");\n\n// EXTERNAL MODULE: ./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js + 8 modules\nvar ngx_translate_core = __webpack_require__(\"sYmb\");\n\n// CONCATENATED MODULE: ./src/addons/mod/forum/pages/new-discussion/new-discussion.page.ts\n\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst _c0 = [\"newDiscFormEl\"];\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](2);\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](4, \"ion-toggle\", 20);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template_ion_toggle_ngModelChange_4_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r9); const ctx_r8 = core[\"Oc\" /* ɵɵnextContext */](3); return ctx_r8.newDiscussion.postToAllGroups = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"Oc\" /* ɵɵnextContext */](3);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](3, 2, \"addon.mod_forum.posttomygroups\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r4.newDiscussion.postToAllGroups);\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-select-option\", 25);\n        core[\"pd\" /* ɵɵtext */](1);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const group_r11 = ctx.$implicit;\n        core[\"Vc\" /* ɵɵproperty */](\"value\", group_r11.id);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"qd\" /* ɵɵtextInterpolate */](group_r11.name);\n    }\n}\nconst _c1 = function (a0) { return { header: a0 }; };\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r13 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\", 21);\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\", 22);\n        core[\"pd\" /* ɵɵtext */](2);\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](4, \"ion-select\", 23);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ngModelChange_4_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r13); const ctx_r12 = core[\"Oc\" /* ɵɵnextContext */](3); return ctx_r12.newDiscussion.groupId = $event; });\n        core[\"Pc\" /* ɵɵpipe */](5, \"translate\");\n        core[\"nd\" /* ɵɵtemplate */](6, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_6_Template, 2, 2, \"ion-select-option\", 24);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r5 = core[\"Oc\" /* ɵɵnextContext */](3);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](3, 5, \"addon.mod_forum.group\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r5.newDiscussion.groupId)(\"disabled\", ctx_r5.newDiscussion.postToAllGroups)(\"interfaceOptions\", core[\"ad\" /* ɵɵpureFunction1 */](9, _c1, core[\"Qc\" /* ɵɵpipeBind1 */](5, 7, \"addon.mod_forum.group\")));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngForOf\", ctx_r5.groups);\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r15 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](2);\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](4, \"ion-toggle\", 26);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template_ion_toggle_ngModelChange_4_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r15); const ctx_r14 = core[\"Oc\" /* ɵɵnextContext */](3); return ctx_r14.newDiscussion.pin = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r6 = core[\"Oc\" /* ɵɵnextContext */](3);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](3, 2, \"addon.mod_forum.discussionpinned\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r6.newDiscussion.pin);\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"zc\" /* ɵɵelement */](0, \"core-attachments\", 27);\n    }\n    if (rf & 2) {\n        const ctx_r7 = core[\"Oc\" /* ɵɵnextContext */](3);\n        core[\"Vc\" /* ɵɵproperty */](\"files\", ctx_r7.newDiscussion.files)(\"maxSize\", ctx_r7.forum.maxbytes)(\"maxSubmissions\", ctx_r7.forum.maxattachments)(\"component\", ctx_r7.component)(\"componentId\", ctx_r7.forum.cmid)(\"allowOffline\", true)(\"courseId\", ctx_r7.courseId);\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r17 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"div\", 16);\n        core[\"nd\" /* ɵɵtemplate */](1, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template, 5, 4, \"ion-item\", 7);\n        core[\"nd\" /* ɵɵtemplate */](2, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template, 7, 11, \"ion-item\", 17);\n        core[\"Ec\" /* ɵɵelementStart */](3, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](4, \"ion-label\");\n        core[\"pd\" /* ɵɵtext */](5);\n        core[\"Pc\" /* ɵɵpipe */](6, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](7, \"ion-toggle\", 18);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_Template_ion_toggle_ngModelChange_7_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r17); const ctx_r16 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r16.newDiscussion.subscribe = $event; });\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"nd\" /* ɵɵtemplate */](8, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template, 5, 4, \"ion-item\", 7);\n        core[\"nd\" /* ɵɵtemplate */](9, AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template, 1, 7, \"core-attachments\", 19);\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"Oc\" /* ɵɵnextContext */](2);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r2.showGroups && ctx_r2.groupIds.length > 1 && ctx_r2.accessInfo.cancanposttomygroups);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r2.showGroups);\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](6, 6, \"addon.mod_forum.discussionsubscription\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r2.newDiscussion.subscribe);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r2.canPin);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r2.canCreateAttachments && ctx_r2.forum && ctx_r2.forum.maxattachments > 0);\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_ion_col_25_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"ion-col\");\n        core[\"Ec\" /* ɵɵelementStart */](1, \"ion-button\", 28);\n        core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonModForumNewDiscussionPage_form_15_ion_col_25_Template_ion_button_click_1_listener() { core[\"fd\" /* ɵɵrestoreView */](_r19); const ctx_r18 = core[\"Oc\" /* ɵɵnextContext */](2); return ctx_r18.discard(); });\n        core[\"pd\" /* ɵɵtext */](2);\n        core[\"Pc\" /* ɵɵpipe */](3, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](3, 1, \"core.discard\"));\n    }\n}\nfunction AddonModForumNewDiscussionPage_form_15_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r21 = core[\"Fc\" /* ɵɵgetCurrentView */]();\n        core[\"Ec\" /* ɵɵelementStart */](0, \"form\", null, 8);\n        core[\"Ec\" /* ɵɵelementStart */](2, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](3, \"ion-label\", 9);\n        core[\"pd\" /* ɵɵtext */](4);\n        core[\"Pc\" /* ɵɵpipe */](5, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](6, \"ion-input\", 10);\n        core[\"Mc\" /* ɵɵlistener */](\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_Template_ion_input_ngModelChange_6_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r21); const ctx_r20 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r20.newDiscussion.subject = $event; });\n        core[\"Pc\" /* ɵɵpipe */](7, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](8, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](9, \"ion-label\", 9);\n        core[\"pd\" /* ɵɵtext */](10);\n        core[\"Pc\" /* ɵɵpipe */](11, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](12, \"core-rich-text-editor\", 11);\n        core[\"Mc\" /* ɵɵlistener */](\"contentChanged\", function AddonModForumNewDiscussionPage_form_15_Template_core_rich_text_editor_contentChanged_12_listener($event) { core[\"fd\" /* ɵɵrestoreView */](_r21); const ctx_r22 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r22.onMessageChange($event); });\n        core[\"Pc\" /* ɵɵpipe */](13, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Ec\" /* ɵɵelementStart */](14, \"ion-item\", 12);\n        core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonModForumNewDiscussionPage_form_15_Template_ion_item_click_14_listener() { core[\"fd\" /* ɵɵrestoreView */](_r21); const ctx_r23 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r23.toggleAdvanced(); });\n        core[\"Pc\" /* ɵɵpipe */](15, \"translate\");\n        core[\"zc\" /* ɵɵelement */](16, \"ion-icon\", 13);\n        core[\"Ec\" /* ɵɵelementStart */](17, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](18, \"h2\");\n        core[\"pd\" /* ɵɵtext */](19);\n        core[\"Pc\" /* ɵɵpipe */](20, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"nd\" /* ɵɵtemplate */](21, AddonModForumNewDiscussionPage_form_15_div_21_Template, 10, 8, \"div\", 14);\n        core[\"Ec\" /* ɵɵelementStart */](22, \"ion-item\");\n        core[\"Ec\" /* ɵɵelementStart */](23, \"ion-label\");\n        core[\"Ec\" /* ɵɵelementStart */](24, \"ion-row\");\n        core[\"nd\" /* ɵɵtemplate */](25, AddonModForumNewDiscussionPage_form_15_ion_col_25_Template, 4, 3, \"ion-col\", 7);\n        core[\"Ec\" /* ɵɵelementStart */](26, \"ion-col\");\n        core[\"Ec\" /* ɵɵelementStart */](27, \"ion-button\", 15);\n        core[\"Mc\" /* ɵɵlistener */](\"click\", function AddonModForumNewDiscussionPage_form_15_Template_ion_button_click_27_listener() { core[\"fd\" /* ɵɵrestoreView */](_r21); const ctx_r24 = core[\"Oc\" /* ɵɵnextContext */](); return ctx_r24.add(); });\n        core[\"pd\" /* ɵɵtext */](28);\n        core[\"Pc\" /* ɵɵpipe */](29, \"translate\");\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n        core[\"Dc\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"Oc\" /* ɵɵnextContext */]();\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](5, 19, \"addon.mod_forum.subject\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngModel\", ctx_r0.newDiscussion.subject)(\"placeholder\", core[\"Qc\" /* ɵɵpipeBind1 */](7, 21, \"addon.mod_forum.subject\"));\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](11, 23, \"addon.mod_forum.message\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"control\", ctx_r0.messageControl)(\"placeholder\", core[\"Qc\" /* ɵɵpipeBind1 */](13, 25, \"addon.mod_forum.message\"))(\"component\", ctx_r0.component)(\"componentId\", ctx_r0.forum.cmid)(\"autoSave\", true)(\"contextInstanceId\", ctx_r0.forum.cmid);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"mc\" /* ɵɵattribute */](\"aria-expanded\", ctx_r0.advanced)(\"aria-label\", core[\"Qc\" /* ɵɵpipeBind1 */](15, 27, ctx_r0.advanced ? \"core.hideadvanced\" : \"core.showadvanced\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"qc\" /* ɵɵclassProp */](\"expandable-status-icon-expanded\", ctx_r0.advanced);\n        core[\"lc\" /* ɵɵadvance */](3);\n        core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](20, 29, \"addon.mod_forum.advanced\"));\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.advanced);\n        core[\"lc\" /* ɵɵadvance */](4);\n        core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.hasOffline);\n        core[\"lc\" /* ɵɵadvance */](2);\n        core[\"Vc\" /* ɵɵproperty */](\"disabled\", ctx_r0.newDiscussion.subject == \"\" || ctx_r0.newDiscussion.message == null);\n        core[\"lc\" /* ɵɵadvance */](1);\n        core[\"rd\" /* ɵɵtextInterpolate1 */](\" \", core[\"Qc\" /* ɵɵpipeBind1 */](29, 31, \"addon.mod_forum.posttoforum\"), \" \");\n    }\n}\n/**\n * Page that displays the new discussion form.\n */\nlet new_discussion_page_AddonModForumNewDiscussionPage = /*@__PURE__*/ (() => {\n    class AddonModForumNewDiscussionPage {\n        constructor(route, splitView) {\n            this.route = route;\n            this.splitView = splitView;\n            this.component = forum[\"b\" /* AddonModForumProvider */].COMPONENT;\n            this.messageControl = new fesm2015_forms[\"g\" /* FormControl */]();\n            this.groupsLoaded = false;\n            this.showGroups = false;\n            this.hasOffline = false;\n            this.canCreateAttachments = true; // Assume we can by default.\n            this.canPin = false;\n            this.showForm = false;\n            this.groups = [];\n            this.groupIds = [];\n            this.newDiscussion = {\n                subject: '',\n                message: null,\n                postToAllGroups: false,\n                groupId: 0,\n                subscribe: true,\n                pin: false,\n                files: [],\n            };\n            this.advanced = false; // Display all form fields.\n            this.accessInfo = {};\n            this.isDestroyed = false;\n            this.forceLeave = false;\n        }\n        /**\n         * Component being initialized.\n         */\n        ngOnInit() {\n            var _a, _b;\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    const routeData = this.route.snapshot.data;\n                    this.courseId = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('courseId');\n                    this.cmId = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('cmId');\n                    this.forumId = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('forumId');\n                    this.timeCreated = services_navigator[\"a\" /* CoreNavigator */].getRequiredRouteNumberParam('timeCreated');\n                    if (this.timeCreated !== 0 && ((_a = routeData.swipeEnabled) !== null && _a !== void 0 ? _a : true)) {\n                        const source = routed_items_manager_sources_tracker[\"a\" /* CoreRoutedItemsManagerSourcesTracker */].getOrCreateSource(forum_discussions_source[\"a\" /* AddonModForumDiscussionsSource */], [this.courseId, this.cmId, (_b = routeData.discussionsPathPrefix) !== null && _b !== void 0 ? _b : '']);\n                        this.discussions = new new_discussion_page_AddonModForumNewDiscussionDiscussionsSwipeManager(source);\n                        yield this.discussions.start();\n                    }\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal(error);\n                    this.goBack();\n                    return;\n                }\n                this.fetchDiscussionData().finally(() => {\n                    this.groupsLoaded = true;\n                });\n            });\n        }\n        /**\n         * User entered the page that contains the component.\n         */\n        ionViewDidEnter() {\n            if (this.syncObserver) {\n                // Already setup.\n                return;\n            }\n            // Refresh data if this discussion is synchronized automatically.\n            this.syncObserver = events[\"b\" /* CoreEvents */].on(forum_sync[\"b\" /* AddonModForumSyncProvider */].AUTO_SYNCED, data => {\n                if (data.forumId == this.forumId && data.userId == sites[\"b\" /* CoreSites */].getCurrentSiteUserId()) {\n                    dom[\"a\" /* CoreDomUtils */].showAlertTranslated('core.notice', 'core.contenteditingsynced');\n                    this.returnToDiscussions();\n                }\n            }, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n        }\n        /**\n         * Fetch if forum uses groups and the groups it uses.\n         *\n         * @param refresh Whether we're refreshing data.\n         * @return Promise resolved when done.\n         */\n        fetchDiscussionData(refresh) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    const mode = yield services_groups[\"a\" /* CoreGroups */].getActivityGroupMode(this.cmId);\n                    const promises = [];\n                    if (mode === services_groups[\"b\" /* CoreGroupsProvider */].SEPARATEGROUPS || mode === services_groups[\"b\" /* CoreGroupsProvider */].VISIBLEGROUPS) {\n                        promises.push(services_groups[\"a\" /* CoreGroups */].instance\n                            .getActivityAllowedGroups(this.cmId)\n                            .then((result) => {\n                            let promise;\n                            if (mode === services_groups[\"b\" /* CoreGroupsProvider */].VISIBLEGROUPS) {\n                                // We need to check which of the returned groups the user can post to.\n                                promise = this.validateVisibleGroups(result.groups);\n                            }\n                            else {\n                                // WS already filters groups, no need to do it ourselves. Add \"All participants\" if needed.\n                                promise = this.addAllParticipantsOption(result.groups, true);\n                            }\n                            // eslint-disable-next-line promise/no-nesting\n                            return promise.then((forumGroups) => {\n                                if (forumGroups.length > 0) {\n                                    this.groups = forumGroups;\n                                    this.groupIds = forumGroups.map((group) => group.id).filter((id) => id > 0);\n                                    // Do not override group id.\n                                    this.newDiscussion.groupId = this.newDiscussion.groupId || forumGroups[0].id;\n                                    this.showGroups = true;\n                                    if (this.groupIds.length <= 1) {\n                                        this.newDiscussion.postToAllGroups = false;\n                                    }\n                                    return;\n                                }\n                                else {\n                                    const message = mode === services_groups[\"b\" /* CoreGroupsProvider */].SEPARATEGROUPS ?\n                                        'addon.mod_forum.cannotadddiscussionall' : 'addon.mod_forum.cannotadddiscussion';\n                                    throw new Error(singletons[\"M\" /* Translate */].instant(message));\n                                }\n                            });\n                        }));\n                    }\n                    else {\n                        this.showGroups = false;\n                        this.newDiscussion.postToAllGroups = false;\n                        // Use the canAddDiscussion WS to check if the user can add attachments and pin discussions.\n                        promises.push(utils[\"a\" /* CoreUtils */].ignoreErrors(forum[\"a\" /* AddonModForum */].instance\n                            .canAddDiscussionToAll(this.forumId, { cmId: this.cmId })\n                            .then((response) => {\n                            this.canPin = !!response.canpindiscussions;\n                            this.canCreateAttachments = !!response.cancreateattachment;\n                            return;\n                        })));\n                    }\n                    // Get forum.\n                    promises.push(forum[\"a\" /* AddonModForum */].getForum(this.courseId, this.cmId).then((forum) => this.forum = forum));\n                    // Get access information.\n                    promises.push(forum[\"a\" /* AddonModForum */].instance\n                        .getAccessInformation(this.forumId, { cmId: this.cmId })\n                        .then((accessInfo) => this.accessInfo = accessInfo));\n                    yield Promise.all(promises);\n                    // If editing a discussion, get offline data.\n                    if (this.timeCreated && !refresh) {\n                        this.syncId = forum_sync[\"a\" /* AddonModForumSync */].getForumSyncId(this.forumId);\n                        yield forum_sync[\"a\" /* AddonModForumSync */].waitForSync(this.syncId).then(() => {\n                            // Do not block if the scope is already destroyed.\n                            if (!this.isDestroyed) {\n                                sync[\"a\" /* CoreSync */].blockOperation(forum[\"b\" /* AddonModForumProvider */].COMPONENT, this.syncId);\n                            }\n                            // eslint-disable-next-line promise/no-nesting\n                            return forum_offline[\"a\" /* AddonModForumOffline */].instance\n                                .getNewDiscussion(this.forumId, this.timeCreated)\n                                .then((discussion) => Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                                this.hasOffline = true;\n                                discussion.options = discussion.options || {};\n                                if (discussion.groupid == forum[\"b\" /* AddonModForumProvider */].ALL_GROUPS) {\n                                    this.newDiscussion.groupId = this.groups[0].id;\n                                    this.newDiscussion.postToAllGroups = true;\n                                }\n                                else {\n                                    this.newDiscussion.groupId = discussion.groupid;\n                                    this.newDiscussion.postToAllGroups = false;\n                                }\n                                this.newDiscussion.subject = discussion.subject;\n                                this.newDiscussion.message = discussion.message;\n                                this.newDiscussion.subscribe = !!discussion.options.discussionsubscribe;\n                                this.newDiscussion.pin = !!discussion.options.discussionpinned;\n                                this.messageControl.setValue(discussion.message);\n                                // Treat offline attachments if any.\n                                if (typeof discussion.options.attachmentsid === 'object' && discussion.options.attachmentsid.offline) {\n                                    const files = yield forum_helper[\"a\" /* AddonModForumHelper */].getNewDiscussionStoredFiles(this.forumId, this.timeCreated);\n                                    this.newDiscussion.files = files;\n                                }\n                                // Show advanced fields by default if any of them has not the default value.\n                                if (!this.newDiscussion.subscribe ||\n                                    this.newDiscussion.pin ||\n                                    this.newDiscussion.files.length ||\n                                    this.groups.length > 0 && this.newDiscussion.groupId != this.groups[0].id ||\n                                    this.newDiscussion.postToAllGroups) {\n                                    this.advanced = true;\n                                }\n                                return;\n                            }));\n                        });\n                    }\n                    if (!this.originalData) {\n                        // Initialize original data.\n                        this.originalData = {\n                            subject: this.newDiscussion.subject,\n                            message: this.newDiscussion.message,\n                            files: this.newDiscussion.files.slice(),\n                        };\n                    }\n                    this.showForm = true;\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.mod_forum.errorgetgroups', true);\n                    this.showForm = false;\n                }\n            });\n        }\n        /**\n         * Validate which of the groups returned by getActivityAllowedGroups in visible groups should be shown to post to.\n         *\n         * @param forumGroups Forum groups.\n         * @return Promise resolved with the list of groups.\n         */\n        validateVisibleGroups(forumGroups) {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                let response;\n                // We first check if the user can post to all the groups.\n                try {\n                    response = yield forum[\"a\" /* AddonModForum */].canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\n                }\n                catch (error) {\n                    // The call failed, let's assume he can't.\n                    response = {\n                        status: false,\n                        canpindiscussions: false,\n                        cancreateattachment: true,\n                    };\n                }\n                this.canPin = !!response.canpindiscussions;\n                this.canCreateAttachments = !!response.cancreateattachment;\n                // The user can post to all groups, add the \"All participants\" option and return them all.\n                if (response.status) {\n                    return this.addAllParticipantsOption(forumGroups, false);\n                }\n                // The user can't post to all groups, let's check which groups he can post to.\n                const promises = [];\n                const filtered = [];\n                forumGroups.forEach((group) => {\n                    promises.push(forum[\"a\" /* AddonModForum */].instance\n                        .canAddDiscussion(this.forumId, group.id, { cmId: this.cmId })\n                        // The call failed, let's return true so the group is shown.\n                        // If the user can't post to it an error will be shown when he tries to add the discussion.\n                        .catch(() => ({ status: true }))\n                        .then((response) => {\n                        if (response.status) {\n                            filtered.push(group);\n                        }\n                        return;\n                    }));\n                });\n                yield Promise.all(promises);\n                return filtered;\n            });\n        }\n        /**\n         * Filter forum groups, returning only those that are inside user groups.\n         *\n         * @param forumGroups Forum groups.\n         * @param userGroups User groups.\n         * @return Filtered groups.\n         */\n        filterGroups(forumGroups, userGroups) {\n            const userGroupsIds = userGroups.map(group => group.id);\n            return forumGroups.filter(forumGroup => userGroupsIds.indexOf(forumGroup.id) > -1);\n        }\n        /**\n         * Add the \"All participants\" option to a list of groups if the user can add a discussion to all participants.\n         *\n         * @param groups Groups.\n         * @param check True to check if the user can add a discussion to all participants.\n         * @return Promise resolved with the list of groups.\n         */\n        addAllParticipantsOption(groups, check) {\n            let promise;\n            if (check) {\n                // We need to check if the user can add a discussion to all participants.\n                promise = forum[\"a\" /* AddonModForum */].canAddDiscussionToAll(this.forumId, { cmId: this.cmId }).then((response) => {\n                    this.canPin = !!response.canpindiscussions;\n                    this.canCreateAttachments = !!response.cancreateattachment;\n                    return response.status;\n                }).catch(() => \n                // The call failed, let's assume he can't.\n                false);\n            }\n            else {\n                // No need to check, assume the user can.\n                promise = Promise.resolve(true);\n            }\n            return promise.then((canAdd) => {\n                if (canAdd) {\n                    groups.unshift({\n                        courseid: this.courseId,\n                        id: forum[\"b\" /* AddonModForumProvider */].ALL_PARTICIPANTS,\n                        name: singletons[\"M\" /* Translate */].instant('core.allparticipants'),\n                    });\n                }\n                return groups;\n            });\n        }\n        /**\n         * Pull to refresh.\n         *\n         * @param refresher Refresher.\n         */\n        refreshGroups(refresher) {\n            const promises = [\n                services_groups[\"a\" /* CoreGroups */].invalidateActivityGroupMode(this.cmId),\n                services_groups[\"a\" /* CoreGroups */].invalidateActivityAllowedGroups(this.cmId),\n                forum[\"a\" /* AddonModForum */].invalidateCanAddDiscussion(this.forumId),\n            ];\n            Promise.all(promises).finally(() => {\n                this.fetchDiscussionData(true).finally(() => {\n                    refresher === null || refresher === void 0 ? void 0 : refresher.complete();\n                });\n            });\n        }\n        /**\n         * Convenience function to update or return to discussions depending on device.\n         *\n         * @param discussionIds Ids of the new discussions.\n         * @param discTimecreated The time created of the discussion (if offline).\n         */\n        returnToDiscussions(discussionIds, discTimecreated) {\n            var _a;\n            this.forceLeave = true;\n            // Delete the local files from the tmp folder.\n            fileuploader[\"a\" /* CoreFileUploader */].clearTmpFiles(this.newDiscussion.files);\n            events[\"b\" /* CoreEvents */].trigger(forum[\"b\" /* AddonModForumProvider */].NEW_DISCUSSION_EVENT, {\n                forumId: this.forumId,\n                cmId: this.cmId,\n                discussionIds: discussionIds,\n                discTimecreated: discTimecreated,\n            }, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n            if ((_a = this.splitView) === null || _a === void 0 ? void 0 : _a.outletActivated) {\n                // Empty form.\n                this.hasOffline = false;\n                this.newDiscussion.subject = '';\n                this.newDiscussion.message = null;\n                this.newDiscussion.files = [];\n                this.newDiscussion.postToAllGroups = false;\n                this.messageEditor.clearText();\n                this.originalData = utils[\"a\" /* CoreUtils */].clone(this.newDiscussion);\n            }\n            else {\n                services_navigator[\"a\" /* CoreNavigator */].back();\n            }\n        }\n        /**\n         * Message changed.\n         *\n         * @param text The new text.\n         */\n        onMessageChange(text) {\n            this.newDiscussion.message = text;\n        }\n        /**\n         * Add a new discussion.\n         */\n        add() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                const forumName = this.forum.name;\n                const subject = this.newDiscussion.subject;\n                let message = this.newDiscussion.message || '';\n                const pin = this.newDiscussion.pin;\n                const attachments = this.newDiscussion.files;\n                const discTimecreated = this.timeCreated || Date.now();\n                const options = {\n                    discussionsubscribe: !!this.newDiscussion.subscribe,\n                };\n                if (!subject) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal('addon.mod_forum.erroremptysubject', true);\n                    return;\n                }\n                if (!message) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModal('addon.mod_forum.erroremptymessage', true);\n                    return;\n                }\n                const modal = yield dom[\"a\" /* CoreDomUtils */].showModalLoading('core.sending', true);\n                // Add some HTML to the message if needed.\n                message = utils_text[\"a\" /* CoreTextUtils */].formatHtmlLines(message);\n                if (pin) {\n                    options.discussionpinned = true;\n                }\n                const groupIds = this.newDiscussion.postToAllGroups ? this.groupIds : [this.newDiscussion.groupId];\n                try {\n                    const discussionIds = yield forum_helper[\"a\" /* AddonModForumHelper */].addNewDiscussion(this.forumId, forumName, this.courseId, subject, message, attachments, options, groupIds, discTimecreated);\n                    if (discussionIds) {\n                        // Data sent to server, delete stored files (if any).\n                        forum_helper[\"a\" /* AddonModForumHelper */].deleteNewDiscussionStoredFiles(this.forumId, discTimecreated);\n                        events[\"b\" /* CoreEvents */].trigger(events[\"b\" /* CoreEvents */].ACTIVITY_DATA_SENT, { module: 'forum' });\n                    }\n                    if (discussionIds && discussionIds.length < groupIds.length) {\n                        // Some discussions could not be created.\n                        dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(null, 'addon.mod_forum.errorposttoallgroups', true);\n                    }\n                    singletons_form[\"a\" /* CoreForms */].triggerFormSubmittedEvent(this.formElement, !!discussionIds, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                    this.returnToDiscussions(discussionIds, discTimecreated);\n                }\n                catch (error) {\n                    dom[\"a\" /* CoreDomUtils */].showErrorModalDefault(error, 'addon.mod_forum.cannotcreatediscussion', true);\n                }\n                finally {\n                    modal.dismiss();\n                }\n            });\n        }\n        /**\n         * Discard an offline saved discussion.\n         */\n        discard() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                try {\n                    yield dom[\"a\" /* CoreDomUtils */].showConfirm(singletons[\"M\" /* Translate */].instant('core.areyousure'));\n                    const promises = [];\n                    promises.push(forum_offline[\"a\" /* AddonModForumOffline */].deleteNewDiscussion(this.forumId, this.timeCreated));\n                    promises.push(utils[\"a\" /* CoreUtils */].ignoreErrors(forum_helper[\"a\" /* AddonModForumHelper */].deleteNewDiscussionStoredFiles(this.forumId, this.timeCreated)));\n                    yield Promise.all(promises);\n                    singletons_form[\"a\" /* CoreForms */].triggerFormCancelledEvent(this.formElement, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                    this.returnToDiscussions();\n                }\n                catch (error) {\n                    // Cancelled.\n                }\n            });\n        }\n        /**\n         * Show or hide advanced form fields.\n         */\n        toggleAdvanced() {\n            this.advanced = !this.advanced;\n        }\n        /**\n         * Check if we can leave the page or not.\n         *\n         * @return Resolved if we can leave it, rejected if not.\n         */\n        canLeave() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                if (this.forceLeave) {\n                    return true;\n                }\n                if (forum_helper[\"a\" /* AddonModForumHelper */].hasPostDataChanged(this.newDiscussion, this.originalData)) {\n                    // Show confirmation if some data has been modified.\n                    yield dom[\"a\" /* CoreDomUtils */].showConfirm(singletons[\"M\" /* Translate */].instant('core.confirmcanceledit'));\n                }\n                // Delete the local files from the tmp folder.\n                fileuploader[\"a\" /* CoreFileUploader */].clearTmpFiles(this.newDiscussion.files);\n                if (this.formElement) {\n                    singletons_form[\"a\" /* CoreForms */].triggerFormCancelledEvent(this.formElement, sites[\"b\" /* CoreSites */].getCurrentSiteId());\n                }\n                return true;\n            });\n        }\n        /**\n         * Runs when the page is about to leave and no longer be the active page.\n         */\n        ionViewWillLeave() {\n            this.syncObserver && this.syncObserver.off();\n            delete this.syncObserver;\n        }\n        /**\n         * Helper function to go back.\n         */\n        goBack() {\n            var _a;\n            if ((_a = this.splitView) === null || _a === void 0 ? void 0 : _a.outletActivated) {\n                services_navigator[\"a\" /* CoreNavigator */].navigate('../../');\n            }\n            else {\n                services_navigator[\"a\" /* CoreNavigator */].back();\n            }\n        }\n        /**\n         * Page destroyed.\n         */\n        ngOnDestroy() {\n            var _a;\n            if (this.syncId) {\n                sync[\"a\" /* CoreSync */].unblockOperation(forum[\"b\" /* AddonModForumProvider */].COMPONENT, this.syncId);\n            }\n            this.isDestroyed = true;\n            (_a = this.discussions) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n    }\n    AddonModForumNewDiscussionPage.ɵfac = function AddonModForumNewDiscussionPage_Factory(t) { return new (t || AddonModForumNewDiscussionPage)(core[\"yc\" /* ɵɵdirectiveInject */](router[\"a\" /* ActivatedRoute */]), core[\"yc\" /* ɵɵdirectiveInject */](split_view[\"a\" /* CoreSplitViewComponent */], 8)); };\n    AddonModForumNewDiscussionPage.ɵcmp = core[\"sc\" /* ɵɵdefineComponent */]({ type: AddonModForumNewDiscussionPage, selectors: [[\"page-addon-mod-forum-new-discussion\"]], viewQuery: function AddonModForumNewDiscussionPage_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"ud\" /* ɵɵviewQuery */](_c0, true);\n                core[\"ud\" /* ɵɵviewQuery */](rich_text_editor[\"a\" /* CoreEditorRichTextEditorComponent */], true);\n            }\n            if (rf & 2) {\n                var _t;\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.formElement = _t.first);\n                core[\"dd\" /* ɵɵqueryRefresh */](_t = core[\"Nc\" /* ɵɵloadQuery */]()) && (ctx.messageEditor = _t.first);\n            }\n        }, decls: 16, vars: 13, consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [3, \"core-swipe-navigation\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"newDiscFormEl\", \"\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"name\", \"subject\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"name\", \"addon_mod_forum_new_discussion\", \"contextLevel\", \"module\", \"elementId\", \"message\", 3, \"control\", \"placeholder\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"contentChanged\"], [\"button\", \"\", \"detail\", \"false\", \"role\", \"heading\", \"aria-controls\", \"addon-mod-forum-new-discussion-advanced\", 1, \"divider\", \"ion-text-wrap\", 3, \"click\"], [\"name\", \"fas-chevron-right\", \"flip-rtl\", \"\", \"slot\", \"start\", \"aria-hidden\", \"true\", 1, \"expandable-status-icon\"], [\"id\", \"addon-mod-forum-new-discussion-advanced\", 4, \"ngIf\"], [\"expand\", \"block\", 3, \"disabled\", \"click\"], [\"id\", \"addon-mod-forum-new-discussion-advanced\"], [\"class\", \"core-edit-set-group\", 4, \"ngIf\"], [\"name\", \"subscribe\", 3, \"ngModel\", \"ngModelChange\"], [3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"allowOffline\", \"courseId\", 4, \"ngIf\"], [\"name\", \"postallgroups\", 3, \"ngModel\", \"ngModelChange\"], [1, \"core-edit-set-group\"], [\"id\", \"addon-mod-forum-groupslabel\"], [\"aria-labelledby\", \"addon-mod-forum-groupslabel\", \"interface\", \"action-sheet\", \"name\", \"groupid\", 3, \"ngModel\", \"disabled\", \"interfaceOptions\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"name\", \"pin\", 3, \"ngModel\", \"ngModelChange\"], [3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"allowOffline\", \"courseId\"], [\"expand\", \"block\", \"fill\", \"outline\", 3, \"click\"]], template: function AddonModForumNewDiscussionPage_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ec\" /* ɵɵelementStart */](0, \"ion-header\");\n                core[\"Ec\" /* ɵɵelementStart */](1, \"ion-toolbar\");\n                core[\"Ec\" /* ɵɵelementStart */](2, \"ion-buttons\", 0);\n                core[\"zc\" /* ɵɵelement */](3, \"ion-back-button\", 1);\n                core[\"Pc\" /* ɵɵpipe */](4, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](5, \"ion-title\");\n                core[\"Ec\" /* ɵɵelementStart */](6, \"h1\");\n                core[\"pd\" /* ɵɵtext */](7);\n                core[\"Pc\" /* ɵɵpipe */](8, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"zc\" /* ɵɵelement */](9, \"ion-buttons\", 2);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](10, \"ion-content\", 3);\n                core[\"Ec\" /* ɵɵelementStart */](11, \"ion-refresher\", 4);\n                core[\"Mc\" /* ɵɵlistener */](\"ionRefresh\", function AddonModForumNewDiscussionPage_Template_ion_refresher_ionRefresh_11_listener($event) { return ctx.refreshGroups($event.target); });\n                core[\"zc\" /* ɵɵelement */](12, \"ion-refresher-content\", 5);\n                core[\"Pc\" /* ɵɵpipe */](13, \"translate\");\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Ec\" /* ɵɵelementStart */](14, \"core-loading\", 6);\n                core[\"nd\" /* ɵɵtemplate */](15, AddonModForumNewDiscussionPage_form_15_Template, 30, 33, \"form\", 7);\n                core[\"Dc\" /* ɵɵelementEnd */]();\n                core[\"Dc\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"text\", core[\"Qc\" /* ɵɵpipeBind1 */](4, 7, \"core.back\"));\n                core[\"lc\" /* ɵɵadvance */](4);\n                core[\"qd\" /* ɵɵtextInterpolate */](core[\"Qc\" /* ɵɵpipeBind1 */](8, 9, \"addon.mod_forum.addanewdiscussion\"));\n                core[\"lc\" /* ɵɵadvance */](3);\n                core[\"Vc\" /* ɵɵproperty */](\"core-swipe-navigation\", ctx.discussions);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"disabled\", !ctx.groupsLoaded);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Wc\" /* ɵɵpropertyInterpolate */](\"pullingText\", core[\"Qc\" /* ɵɵpipeBind1 */](13, 11, \"core.pulltorefresh\"));\n                core[\"lc\" /* ɵɵadvance */](2);\n                core[\"Vc\" /* ɵɵproperty */](\"hideUntil\", ctx.groupsLoaded);\n                core[\"lc\" /* ɵɵadvance */](1);\n                core[\"Vc\" /* ɵɵproperty */](\"ngIf\", ctx.showForm);\n            }\n        }, directives: [ionic_angular[\"C\" /* IonHeader */], ionic_angular[\"Ab\" /* IonToolbar */], ionic_angular[\"m\" /* IonButtons */], ionic_angular[\"h\" /* IonBackButton */], ionic_angular[\"i\" /* IonBackButtonDelegate */], ionic_angular[\"yb\" /* IonTitle */], content[\"a\" /* CoreContentDirective */], ionic_angular[\"v\" /* IonContent */], swipe_navigation[\"a\" /* CoreSwipeNavigationDirective */], ionic_angular[\"bb\" /* IonRefresher */], ionic_angular[\"cb\" /* IonRefresherContent */], loading[\"a\" /* CoreLoadingComponent */], common[\"t\" /* NgIf */], fesm2015_forms[\"H\" /* ɵangular_packages_forms_forms_y */], fesm2015_forms[\"s\" /* NgControlStatusGroup */], fesm2015_forms[\"t\" /* NgForm */], ionic_angular[\"I\" /* IonItem */], ionic_angular[\"O\" /* IonLabel */], ionic_angular[\"H\" /* IonInput */], ionic_angular[\"Pb\" /* TextValueAccessor */], fesm2015_forms[\"r\" /* NgControlStatus */], fesm2015_forms[\"u\" /* NgModel */], rich_text_editor[\"a\" /* CoreEditorRichTextEditorComponent */], ionic_angular[\"D\" /* IonIcon */], fa_icon[\"a\" /* CoreFaIconDirective */], ionic_angular[\"hb\" /* IonRow */], ionic_angular[\"u\" /* IonCol */], update_non_reactive_attributes[\"a\" /* CoreUpdateNonReactiveAttributesDirective */], ionic_angular[\"l\" /* IonButton */], ionic_angular[\"zb\" /* IonToggle */], ionic_angular[\"d\" /* BooleanValueAccessor */], ionic_angular[\"lb\" /* IonSelect */], ionic_angular[\"Ob\" /* SelectValueAccessor */], common[\"s\" /* NgForOf */], ionic_angular[\"mb\" /* IonSelectOption */], attachments_attachments[\"a\" /* CoreAttachmentsComponent */]], pipes: [ngx_translate_core[\"d\" /* TranslatePipe */]], encapsulation: 2 });\n    return AddonModForumNewDiscussionPage;\n})();\n/**\n * Helper to manage swiping within a collection of discussions.\n */\nclass new_discussion_page_AddonModForumNewDiscussionDiscussionsSwipeManager extends forum_discussions_swipe_manager[\"a\" /* AddonModForumDiscussionsSwipeManager */] {\n    /**\n     * @inheritdoc\n     */\n    getSelectedItemPathFromRoute(route) {\n        return `${this.getSource().DISCUSSIONS_PATH_PREFIX}new/${route.params.timeCreated}`;\n    }\n}\n\n// CONCATENATED MODULE: ./src/addons/mod/forum/pages/new-discussion/new-discussion.module.ts\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\nconst routes = [{\n        path: '',\n        component: new_discussion_page_AddonModForumNewDiscussionPage,\n        canDeactivate: [can_leave[\"a\" /* CanLeaveGuard */]],\n    }];\nlet new_discussion_module_AddonForumNewDiscussionPageModule = /*@__PURE__*/ (() => {\n    class AddonForumNewDiscussionPageModule {\n    }\n    AddonForumNewDiscussionPageModule.ɵmod = core[\"wc\" /* ɵɵdefineNgModule */]({ type: AddonForumNewDiscussionPageModule });\n    AddonForumNewDiscussionPageModule.ɵinj = core[\"vc\" /* ɵɵdefineInjector */]({ factory: function AddonForumNewDiscussionPageModule_Factory(t) { return new (t || AddonForumNewDiscussionPageModule)(); }, imports: [[\n                router[\"m\" /* RouterModule */].forChild(routes),\n                shared_module[\"a\" /* CoreSharedModule */],\n                components_module[\"a\" /* AddonModForumComponentsModule */],\n                components_components_module[\"a\" /* CoreEditorComponentsModule */],\n            ]] });\n    return AddonForumNewDiscussionPageModule;\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"kd\" /* ɵɵsetNgModuleScope */](new_discussion_module_AddonForumNewDiscussionPageModule, { declarations: [new_discussion_page_AddonModForumNewDiscussionPage], imports: [router[\"m\" /* RouterModule */], shared_module[\"a\" /* CoreSharedModule */],\n            components_module[\"a\" /* AddonModForumComponentsModule */],\n            components_components_module[\"a\" /* CoreEditorComponentsModule */]] });\n})();\n\n\n/***/ }),\n\n/***/ \"eoiU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CoreSwipeNavigationItemsManager; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"mrSG\");\n/* harmony import */ var _services_navigator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"pHTc\");\n/* harmony import */ var _routed_items_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"CtbY\");\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nclass CoreSwipeNavigationItemsManager extends _routed_items_manager__WEBPACK_IMPORTED_MODULE_2__[/* CoreRoutedItemsManager */ \"a\"] {\n    /**\n     * Process page started operations.\n     */\n    start() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            this.updateSelectedItem();\n        });\n    }\n    /**\n     * Navigate to the next item.\n     */\n    navigateToNextItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            yield this.navigateToItemBy(1, 'forward');\n        });\n    }\n    /**\n     * Navigate to the previous item.\n     */\n    navigateToPreviousItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            yield this.navigateToItemBy(-1, 'back');\n        });\n    }\n    /**\n     * Has a next item.\n     */\n    hasNextItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(1);\n            return !!item;\n        });\n    }\n    /**\n     * Has a previous item.\n     */\n    hasPreviousItem() {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(-1);\n            return !!item;\n        });\n    }\n    /**\n     * @inheritdoc\n     */\n    getCurrentPageRoute() {\n        return _services_navigator__WEBPACK_IMPORTED_MODULE_1__[/* CoreNavigator */ \"a\"].getCurrentRoute();\n    }\n    /**\n     * @inheritdoc\n     */\n    getSelectedItemPathFromRoute(route) {\n        const segments = [];\n        while (route) {\n            segments.push(...route.url);\n            if (!route.firstChild) {\n                break;\n            }\n            route = route.firstChild;\n        }\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    navigateToItemBy(delta, animationDirection) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const item = yield this.getItemBy(delta);\n            if (!item) {\n                return;\n            }\n            yield this.navigateToItem(item, { animationDirection, replace: true });\n        });\n    }\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     */\n    getItemBy(delta) {\n        var _a;\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"a\"])(this, void 0, void 0, function* () {\n            const items = this.getSource().getItems();\n            const selectedIndex = (_a = (this.selectedItem && (items === null || items === void 0 ? void 0 : items.indexOf(this.selectedItem)))) !== null && _a !== void 0 ? _a : -1;\n            if (selectedIndex === -1 || items === null) {\n                return null;\n            }\n            const deltaStep = delta > 0 ? 1 : -1;\n            let nextIndex = selectedIndex;\n            let deltaMoved = 0;\n            while (deltaMoved !== delta) {\n                nextIndex += deltaStep;\n                if (nextIndex < 0 || nextIndex >= items.length) {\n                    break;\n                }\n                if (this.skipItemInSwipe(items[nextIndex])) {\n                    continue;\n                }\n                deltaMoved += deltaStep;\n            }\n            if (deltaMoved === delta) {\n                return items[nextIndex];\n            }\n            if (!this.getSource().isCompleted()) {\n                yield this.getSource().load();\n                return this.getItemBy(delta);\n            }\n            return null;\n        });\n    }\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    skipItemInSwipe(item) {\n        return false;\n    }\n}\n\n\n/***/ })\n\n}]);","inputSourceMap":null}